plugins {
    id 'java'
    id 'jacoco'
    id 'eclipse'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.github.kt3k.coveralls' version '2.9.0'
}

group = 'cz.rumanek.kramerius'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jacocoTestReport {
	String[] excludeFromCoverage = coverageExcludeClasses.split(',')
	reports {
		xml.enabled true
		html.enabled true
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: excludeFromCoverage)
		})
	}
}

check.dependsOn jacocoTestReport


configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-solr')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('de.digitalcollections.iiif:iiif-apis:0.3.3')
	compile('org.modelmapper:modelmapper:2.2.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.test {
	finalizedBy(tasks.jacocoTestReport)
}
